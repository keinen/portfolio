


// vvv Screen sizes vvv 
// vvv smaller than tablet vvv ------------------------------------



@media only screen and (max-width: 768px) {


  // Settings
  // ==================================================
  $hamburger-padding-x                       : 15px !default;
  $hamburger-padding-y                       : 15px !default;
  $hamburger-layer-width                     : 40px !default;
  $hamburger-layer-height                    : 4px !default;
  $hamburger-layer-spacing                   : 6px !default;
  $hamburger-layer-color                     : #000 !default;
  $hamburger-layer-border-radius             : 4px !default;
  $hamburger-hover-opacity                   : 0.7 !default;
  $hamburger-hover-transition-duration       : 0.15s !default;
  $hamburger-hover-transition-timing-function: linear !default;

  // To use CSS filters as the hover effect instead of opacity,
  // set $hamburger-hover-use-filter as true and
  // change the value of $hamburger-hover-filter accordingly.
  $hamburger-hover-use-filter: false !default;
  $hamburger-hover-filter    : opacity(50%) !default;

  // Types (Remove or comment out what you donâ€™t need)
  // ==================================================
  $hamburger-types: (

          collapse,
          collapse-r
  ) !default;
  // Hamburger
  // ==================================================

  .hamburger-placement{
    display: flex;
    justify-content: flex-end;
  }

  .hamburger {
    padding: $hamburger-padding-y $hamburger-padding-x;
    display: inline-block;
    cursor: pointer;
    transition-property: opacity, filter;
    transition-duration: $hamburger-hover-transition-duration;
    transition-timing-function: $hamburger-hover-transition-timing-function;

    // Normalize (<button>)
    font: inherit;
    color: inherit;
    text-transform: none;
    background-color: transparent;
    border: 0;
    margin: 0;
    overflow: visible;
    outline-color: white;

    &:hover {
      @if $hamburger-hover-use-filter == true {
        filter: $hamburger-hover-filter;
      }
      @else {
        opacity: $hamburger-hover-opacity;
      }
    }
  }

  .hamburger-box {
    width: $hamburger-layer-width;
    height: $hamburger-layer-height * 3 + $hamburger-layer-spacing * 2;
    display: inline-block;
    position: relative;
    .hamburger-box:focus{
      background-color: white;
      border: none;
    }
  }

  .hamburger-inner {
    display: block;
    top: 50%;
    margin-top: $hamburger-layer-height / -2;

    &,
    &::before,
    &::after {
      width: $hamburger-layer-width;
      height: $hamburger-layer-height;
      background-color: $hamburger-layer-color;
      border-radius: $hamburger-layer-border-radius;
      position: absolute;
      transition-property: transform;
      transition-duration: 0.15s;
      transition-timing-function: ease;
    }

    &::before,
    &::after {
      content: "";
      display: block;
    }

    &::before {
      top: ($hamburger-layer-spacing + $hamburger-layer-height) * -1;
    }

    &::after {
      bottom: ($hamburger-layer-spacing + $hamburger-layer-height) * -1;
    }
  }
  /*
 * Collapse
 */
  .hamburger--collapse {
    .hamburger-inner {
      top: auto;
      bottom: 0;
      transition-duration: 0.13s;
      transition-delay: 0.13s;
      transition-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);

      &::after {
        top: ($hamburger-layer-spacing * 2 + $hamburger-layer-height * 2) * -1;
        transition: top 0.2s 0.2s cubic-bezier(0.33333, 0.66667, 0.66667, 1),
        opacity 0.1s linear;
      }

      &::before {
        transition: top 0.12s 0.2s cubic-bezier(0.33333, 0.66667, 0.66667, 1),
        transform 0.13s cubic-bezier(0.55, 0.055, 0.675, 0.19);
      }
    }

    &.is-active {
      .hamburger-inner {
        transform: translate3d(0, ($hamburger-layer-spacing + $hamburger-layer-height) * -1, 0) rotate(-45deg);
        transition-delay: 0.22s;
        transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);

        &::after {
          top: 0;
          opacity: 0;
          transition: top 0.2s cubic-bezier(0.33333, 0, 0.66667, 0.33333),
          opacity 0.1s 0.22s linear;
        }

        &::before {
          top: 0;
          transform: rotate(-90deg);
          transition: top 0.1s 0.16s cubic-bezier(0.33333, 0, 0.66667, 0.33333),
          transform 0.13s 0.25s cubic-bezier(0.215, 0.61, 0.355, 1);
        }
      }
    }
  }

  .hide-nav{
    display: none;
  }

  nav {
    display:flex;
    flex-direction: column;
    width: 100%;
    margin: 0 auto;
  }

  .nav-icons {

    display: flex;
    justify-content: space-evenly;
    width: 100%;
    a {
      padding:10px;
    }
  }

  .navbar-menu {

  }

    .nav-ul {
      display: flex;
      flex-direction: column;
      .nav-li {
        text-align: center;
        list-style-type: none;
        margin: 25px;
      }
    }
}




// vvv Screen sizes vvv
// vvv larger than tablet vvv ------------------------------------


@media only screen and (min-width: 769px) {


  nav {
    display: flex;
    flex-direction: row;
    max-width: 1200px;
    margin: 0 auto;
  }

  .hamburger{
    order:5;
    display: none;
  }

  .nav-icons {
    display: flex;
    justify-content: space-around;
    margin: 15px 15px 0px 40px;
    a{ margin:0px 15px 0px 0px;
    }
  }

  .navbar-menu {
    display: flex;}


.hide-nav{
  display:flex;
    width:100%;
  justify-content: space-between;
  .full-nav{
    display: flex;

  }
}

    .nav-ul {
      width: 100%;
      display: flex;
      .nav-li {
        list-style-type: none;
        margin: 25px;
      }
    }



}